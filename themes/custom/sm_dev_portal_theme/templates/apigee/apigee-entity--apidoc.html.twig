{% extends 'apigee-entity.html.twig' %}

{#
/**
 * @file
 * Generic theme implementation to display an Apigee entity.
 *
 * Drupal core does not yet provide a generic theme for entities therefore you
 * have to implement your own entity type specific theme. This will change
 * when http://dgo.to/2808481 gets fixed which will introduce a generic template
 * for entities with common preprocess functions and theme suggestions.
 *
 * Available variables:
 * - entity: The entity with limited access to object properties and methods.
 *   Only method names starting with "get", "has", or "is" and a few common
 *   methods such as "id", "label", and "bundle" are available. For example:
 *   - entity.getEntityTypeId() will return the entity type ID.
 *   - entity.hasField('field_example') returns TRUE if the entity includes
 *     field_example. (This does not indicate the presence of a value in this
 *     field.)
 *   Calling other methods, such as entity.delete(), will result in an exception.
 *   See \Drupal\apigee_edge\Entity\EdgeEntityInterface for a full list of
 *   methods.
 * - label: The title of the entity.
 * - content: All rendered field items. Use {{ content }} to print them all,
 *   or print a subset such as {{ content.field_example }}. Use
 *   {{ content|without('field_example') }} to temporarily suppress the printing
 *   of a given child element.
 * - url: Direct URL of the current entity.
 * - attributes: HTML attributes for the containing element.
 * - title_attributes: Same as attributes, except applied to the main title
 *   tag that appears in the template.
 * - content_attributes: Same as attributes, except applied to the main
 *   content tag that appears in the template.
 * - title_prefix: Additional output populated by modules, intended to be
 *   displayed in front of the main title tag that appears in the template.
 * - title_suffix: Additional output populated by modules, intended to be
 *   displayed after the main title tag that appears in the template.
 * - view_mode: View mode; for example, "teaser" or "full".
 *
 * @see \Drupal\apigee_edge\Entity\EdgeEntityViewBuilder::getBuildDefaults()
 * @see \Drupal\Core\Entity\EntityViewBuilder::getBuildDefaults()
 * @see template_preprocess_apigee_entity()
 * @see https://www.drupal.org/project/drupal/issues/2808481
 *
 * @ingroup themeable
 */
#}

{% set attributes = attributes.addClass('smdp-api-documentation','position-relative') %}

{% block content %}
	{% if content.spec['#formatter'] == 'swagger_ui_file' %}
		{{ attach_library('sm_dev_portal_theme/swagger-extend') }}
	{% endif %}

	{% set count_serviceType = entity.get('field_service_type').getvalue()|length %}

	{% if count_serviceType > 0 %}
		<div class="api-service-type mb-3">
			<label class="mr-3 mb-2 mb-sm-0 d-block d-sm-inline"><strong>{{ content.field_service_type['#title'] }}</strong></label>
			{% for obj in 0..count_serviceType - 1 %}
				{% set colorServiceType = content.field_service_type[obj]['#options'].entity.field_color_identification.value.0.color %}
				<span class="d-inline-block service-type px-2 {{ (loop.last == true) ? 'ml-1' }}" style="background-color: {{ colorServiceType }}">{{- content.field_service_type[obj]['#title'] -}}</span>
			{% endfor %}
		</div>
	{% endif %}

	{% if content.description.0 %}
		<div class="api-description">
			{{ content.description.0 }}
		</div>
	{% endif %}

	<hr class="mt-4 mb-4">

	{% if content.spec.0 %}
		<div class="api-documentation mt-4">
			<div class="row">
				{% if content.spec['#formatter'] == 'swagger_ui_file' %}
					<div class="col-12 col-lg-3 d-none d-lg-block">
						<aside class="nav flex-column nav-pills api-sidebar bg-transparent my-3" id="v-pills-tab" role="tablist" aria-orientation="vertical">
						</aside>
					</div>
				{% endif %}

				<div class="col-l2 {{ (content.spec['#formatter'] == 'swagger_ui_file') ? 'col-lg-9' : 'col-sm-12' }}">
					{{ content.spec }}
				</div>
			</div>
		</div>
	{% endif %}
{% endblock %}
