{% extends 'apigee-entity.html.twig' %}

{#
/**
 * @file
 * Generic theme implementation to display an Apigee entity.
 *
 * Drupal core does not yet provide a generic theme for entities therefore you
 * have to implement your own entity type specific theme. This will change
 * when http://dgo.to/2808481 gets fixed which will introduce a generic template
 * for entities with common preprocess functions and theme suggestions.
 *
 * Available variables:
 * - entity: The entity with limited access to object properties and methods.
 *   Only method names starting with "get", "has", or "is" and a few common
 *   methods such as "id", "label", and "bundle" are available. For example:
 *   - entity.getEntityTypeId() will return the entity type ID.
 *   - entity.hasField('field_example') returns TRUE if the entity includes
 *     field_example. (This does not indicate the presence of a value in this
 *     field.)
 *   Calling other methods, such as entity.delete(), will result in an exception.
 *   See \Drupal\apigee_edge\Entity\EdgeEntityInterface for a full list of
 *   methods.
 * - label: The title of the entity.
 * - content: All rendered field items. Use {{ content }} to print them all,
 *   or print a subset such as {{ content.field_example }}. Use
 *   {{ content|without('field_example') }} to temporarily suppress the printing
 *   of a given child element.
 * - url: Direct URL of the current entity.
 * - attributes: HTML attributes for the containing element.
 * - title_attributes: Same as attributes, except applied to the main title
 *   tag that appears in the template.
 * - content_attributes: Same as attributes, except applied to the main
 *   content tag that appears in the template.
 * - title_prefix: Additional output populated by modules, intended to be
 *   displayed in front of the main title tag that appears in the template.
 * - title_suffix: Additional output populated by modules, intended to be
 *   displayed after the main title tag that appears in the template.
 * - view_mode: View mode; for example, "teaser" or "full".
 *
 * @see \Drupal\apigee_edge\Entity\EdgeEntityViewBuilder::getBuildDefaults()
 * @see \Drupal\Core\Entity\EntityViewBuilder::getBuildDefaults()
 * @see template_preprocess_apigee_entity()
 * @see https://www.drupal.org/project/drupal/issues/2808481
 *
 * @ingroup themeable
 */
#}

{% set attributes = attributes.addClass('smdp-apis','smdp-card','card','rounded-sm','mb-4','position-relative') %}

{% block apigee_entity %}
	<div {{ attributes|without('role').addClass(classes) }}>
		{% block content %}
			{% set countServiceType = entity.field_service_type.getvalue()|length %}

			{% if countServiceType > 0 %}
				<div class="card-icon px-3 pt-4 pb-2">
					{% for obj in 0..countServiceType - 1 %}
						<i class="float-right {{ (loop.last == true and countServiceType > 1) ? 'mr-1' }}" style="background-color: {{ content.field_service_type[obj]['#options'].entity.field_color_identification.color }}; border: 1px solid {{ content.field_service_type[obj]['#options'].entity.field_color_identification.color }}; width: 35px; height: 16px; -webkit-border-radius: 190px; border-radius: 190px;"></i>
					{% endfor %}
				</div>
			{% endif %}

			<div class="card-img-top text-center px-3">
				<img src="{{ base_path ~ directory }}/assets/images/api-product-logo.svg" alt="Card image cap">
			</div>

			<div{{ content_attributes.addClass('card-body','px-3','pt-3','pb-4') }}>
				{% if content.name.0 %}
					<h5 {{ title_attributes.addClass('card-title','mb-0') }}>
						<a href="{{ content.field_link['#url'] }}">
							{{ content.name.0 }}
						</a>
					</h5>
				{% endif %}

				{% if content.description.0 %}
					<div class="card-text mb-0 mt-2">
						{{ content.description.0 }}
					</div>
				{% endif %}
			</div>
		{% endblock %}
	</div>
{% endblock %}

